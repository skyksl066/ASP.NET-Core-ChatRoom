@{
    ViewData["Title"] = "Home Page";
}
<h3 class="text-center">Messaging</h3>

<div class="messaging">
    <div class="inbox_msg">
        <div class="inbox_people">
            <div class="headind_srch">
                <div class="recent_heading">
                    <h4>Recent</h4>
                </div>
                <div class="srch_bar">
                    <div class="stylish-input-group">
                        <input type="text" class="search-bar" placeholder="Search">
                        <span class="input-group-addon">
                            <button type="button" id="Btn_Search"><i class="fa fa-search" aria-hidden="true"></i></button>
                        </span>
                    </div>
                </div>
            </div>
            <div class="inbox_chat">
                @*<div class="chat_list active_chat">
                    <div class="chat_people">
                        <div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                        <div class="chat_ib">
                            <h5>Sunil Rajput <span class="chat_date">Dec 25</span></h5>
                            <p>
                                Test, which is a new approach to have all solutions
                                astrology under one roof.
                            </p>
                        </div>
                    </div>
                </div>
                <div class="chat_list">
                    <div class="chat_people">
                        <div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                        <div class="chat_ib">
                            <h5>Sunil Rajput <span class="chat_date">Dec 25</span></h5>
                            <p>
                                Test, which is a new approach to have all solutions
                                astrology under one roof.
                            </p>
                        </div>
                    </div>
                </div>
                <div class="chat_list">
                    <div class="chat_people">
                        <div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                        <div class="chat_ib">
                            <h5>Sunil Rajput <span class="chat_date">Dec 25</span></h5>
                            <p>
                                Test, which is a new approach to have all solutions
                                astrology under one roof.
                            </p>
                        </div>
                    </div>
                </div>*@
            </div>
        </div>
        <div class="mesgs">
            <div class="msg_history"></div>
            <div class="type_msg">
                <div class="input_msg_write">
                    <input type="text" class="write_msg" placeholder="Type a message" />
                    <button class="msg_send_btn" type="button"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
@*<script src="~/js/chat.js"></script>*@
@section Scripts{
    <script>
        $(document).ready(function () {
            const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
            let receivedMsg = {};
            let userInfo;
            const outgoingMsg = (message, date) => {
                return `<div class="outgoing_msg">
                    <div class= "sent_msg">
                        <p>${message}</p>
                        <span class="time_date">${date.toLocaleString()}</span>
                    </div>
                </div>`;
            };
            const incomingMsg = (message, date) => {
                return `<div class="incoming_msg">
                    <div class="incoming_msg_img">
                        <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil">
                    </div>
                    <div class="received_msg">
                        <div class="received_withd_msg">
                            <p>${message}</p>
                            <span class="time_date">${date.toLocaleString()}</span>
                        </div>
                    </div>
                </div>`;
            };
            const messageTo = () => {
                let to = $('.chat_list.active_chat').data('id');
                let message = $('.write_msg').val();
                connection.invoke("MessageTo", [to], message).then(function () {
                    $('.msg_history').append(outgoingMsg(message, new Date()));
                    $('.write_msg').val('');
                    $('.msg_history').animate({ scrollTop: $('.msg_history').prop("scrollHeight") }, 400);
                    if (receivedMsg[to] == null) {
                        receivedMsg[to] = [];
                        receivedMsg[to].push({ id: userInfo.ClientId, message: message, date: new Date() });
                    } else {
                        receivedMsg[to].push({ id: userInfo.ClientId, message: message, date: new Date() });
                    }
                }).catch(function (err) {
                    return console.error(err.toString());
                });
            }
            //連線到 SignalR 伺服器
            connection.start().then(function () {
                connection.invoke('GetOnlineList').catch(function (err) {
                    return console.error(err.toString());
                });
            }).catch(function (err) {
                return console.error(err.toString());
            });

            // 再線使用者清單
            connection.on('onlineList', function (loggedInfos) {
                console.log(loggedInfos)
                let temp = '';
                loggedInfos.forEach(item => {
                    if (item.userName == null
                        || item.connectionId == userInfo.ClientId
                        || $(`[data-id="${item.connectionId}"].chat_list`).length > 0) return;
                    temp += `<div class="chat_list" data-id="${item.connectionId}">
                        <div class="chat_people">
                            <div class="chat_img">
                                <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil">
                            </div>
                            <div class="chat_ib">
                                <h5>${item.userName} <span class="chat_date">${item.lastRequest}</span></h5>
                            </div>
                        </div>
                    </div>`;
                });
                $('.inbox_chat').append(temp);
            });

            // 當有使用者登入
            connection.on('onUserLogin', function (loggedInfos) {
                console.log(loggedInfos)
                connection.invoke('GetOnlineList').catch(function (err) {
                    return console.error(err.toString());
                });
                if ($('.chat_list.active_chat').length == 0) {
                    $('.msg_send_btn').prop('disabled', true);
                }
            });

            // 當有使用者離線
            connection.on('onUserLoginOut', function (loggedInfos) {
                $(`[data-id="${loggedInfos.connectionId}"].chat_list`).remove();
                connection.invoke('GetOnlineList').catch(function (err) {
                    return console.error(err.toString());
                });
            });

            // 回報使用者資訊
            connection.on('getLoginInfo', function (ClientId) {
                userInfo.ClientId = ClientId;
                connection.invoke('Login', userInfo.name).catch(function (err) {
                    return console.error(err.toString());
                });
            });

            // 送出訊息
            $(document).on('click', '.msg_send_btn', function (e) {
                messageTo();
            });
            $(document).on('keyup', '.write_msg', function (e) {
                if (e.keyCode != 13) return;
                messageTo();
            });

            // 當收到訊息
            connection.on("showMessage", function (from, message) {
                console.log(from, message)
                if (receivedMsg[from] == null) {
                    receivedMsg[from] = [];
                    receivedMsg[from].push({ id: from, message: message, date: new Date() });
                } else {
                    receivedMsg[from].push({ id: from, message: message, date: new Date() });
                }
                if (from == $('.chat_list.active_chat').data('id')) {
                    $('.msg_history').append(incomingMsg(message, new Date()));
                    $('.msg_history').animate({ scrollTop: $('.msg_history').prop("scrollHeight") }, 400);
                } else {
                    let chat_list = $(`[data-id="${from}"].chat_list`);
                    if (chat_list.find('.chat_ib p').length == 0) {
                        chat_list.find('.chat_ib').append(`<p>${message}</p>`);
                    } else {
                        chat_list.find('.chat_ib p').text(message);
                    }
                }
            });

            if (localStorage.getItem('userInfo') == null) {
                let name = prompt('Please enter your name');
                userInfo = { name: name };
                localStorage.setItem('userInfo', JSON.stringify(userInfo));
            } else {
                userInfo = JSON.parse(localStorage.getItem('userInfo'));
            }

            // 選取使用者清單
            $(document).on('click', '.chat_list', function () {
                $('.msg_history').empty();
                $('.msg_send_btn').prop('disabled', false);
                if (typeof receivedMsg[$(this).data('id')] != 'undefined') {
                    receivedMsg[$(this).data('id')].forEach(item => {
                        if (item.id == userInfo.ClientId) {
                            $('.msg_history').append(outgoingMsg(item.message, item.date));
                        } else {
                            $('.msg_history').append(incomingMsg(item.message, item.date));
                        }
                        console.log(item)
                    });
                }
                $('.chat_list').removeClass('active_chat');
                $(this).toggleClass('active_chat');
            });

            $('.search-bar').on('keyup', function () {
                let input = $('.search-bar').val();
                $.each($('.chat_ib'), function (index, element) {
                    if (element.innerHTML.indexOf(input) > -1) {
                        $(element).parents('.chat_list').show();
                    } else {
                        $(element).parents('.chat_list').hide();
                    }
                });
            });
        });
    </script>
}